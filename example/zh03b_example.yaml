esphome:
  name: air-quality-monitor
  friendly_name: Air Quality Monitor
  platform: ESP32
  board: esp32dev

wifi:
  ssid: "YourWiFiSSID"
  password: "YourWiFiPassword"

# Enable logging
logger:
  level: INFO
  # Uncomment for debugging
  # logs:
  #   zh03b: DEBUG

# Enable Home Assistant API
api:

ota:
  password: "YourOTAPassword"

# External component from GitHub
external_components:
  - source: github://Bjk8kds/esphome-zh03b-sensor
    components: [ zh03b ]

# UART configuration for ZH03B
uart:
  id: uart_zh03b
  tx_pin: GPIO17  # Connect to sensor RX (required for Q&A mode)
  rx_pin: GPIO16  # Connect to sensor TX
  baud_rate: 9600

# Sensor configurations
sensor:
  ### Example 1: Passive Mode (Default) - Continuous monitoring
  - platform: zh03b
    uart_id: uart_zh03b
    mode: PASSIVE  # Sensor sends data automatically every second
    pm_1_0:
      name: "PM1.0"
      id: pm1_passive
      filters:
        - sliding_window_moving_average:
            window_size: 10
            send_every: 10
    pm_2_5:
      name: "PM2.5"
      id: pm25_passive
      # Override device class if needed
      # device_class: volatile_organic_compounds
    pm_10_0:
      name: "PM10.0"
      id: pm10_passive

  ### Example 2: Q&A Mode - Power efficient for battery operation
  - platform: zh03b
    uart_id: uart_zh03b
    mode: QA  # Request data only when needed
    update_interval: 60s  # Minimum 30s, can use: 30s, 1min, 90s, 2m, etc.
    pm_1_0:
      name: "PM1.0 QA"
      id: pm1_qa
    pm_2_5:
      name: "PM2.5 QA"
      id: pm25_qa
      accuracy_decimals: 1  # Override decimal places
    pm_10_0:
      name: "PM10.0 QA"
      id: pm10_qa

# Optional: Text template sensors for air quality levels
text_sensor:
  - platform: template
    name: "Air Quality Level"
    lambda: |-
      if (id(pm25_passive).state < 12) {
        return {"Good"};
      } else if (id(pm25_passive).state < 35.5) {
        return {"Moderate"};
      } else if (id(pm25_passive).state < 55.5) {
        return {"Unhealthy for Sensitive Groups"};
      } else if (id(pm25_passive).state < 150.5) {
        return {"Unhealthy"};
      } else if (id(pm25_passive).state < 250.5) {
        return {"Very Unhealthy"};
      } else {
        return {"Hazardous"};
      }
    update_interval: 30s

# Optional: Binary sensor for air quality alert
binary_sensor:
  - platform: template
    name: "Air Quality Alert"
    lambda: |-
      return id(pm25_passive).state > 55.5;
    device_class: problem

# Optional: Status LED
light:
  - platform: status_led
    name: "Status LED"
    pin: GPIO2
